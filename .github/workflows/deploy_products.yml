name: Deploy products
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'tests/**'
      - '.github/workflows/test.yml'
  pull_request:
    paths-ignore:
      - 'tests/**'
      - '.github/workflows/test.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jorelali/setup-elm@v3
        with:
          elm-version: 0.19.1
      - name: install npm dependencies
        run: npm install
      - run: |
          staging_prefix=pr-${PR_NUMBER}
          cp -rf statics "docs/$staging_prefix"
          elm make src/Main.elm --output="docs/$staging_prefix/main.js"
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.number }}
      - run: |
          cp -rf statics "docs/latest"
          elm make src/Main.elm --output=docs/latest/main.js
        if: github.event_name != 'pull_request'
      - name: git setting
        run: |
          git config --local user.email "kachick1+mobu-elm@gmail.com"
          git config --local user.name "mobu-elm bot"
      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=`date +"%Y%m%d-%H%M-UTC"`
          BRANCH_NAME="deploy-$DATE"
          git checkout -b "$BRANCH_NAME"
          find . | grep -v -P '\.git(\b|ignore)|docs|LICENSE|^\.$' | xargs rm -rf
          git add docs
          git commit -m 'Update with latest code'
          git fetch
          git checkout gh-pages
          git merge "$BRANCH_NAME" --allow-unrelated-histories
          find . | grep -v -P '\.git(\b|ignore)|docs|LICENSE|^\.$' | xargs rm -rf
          git commit -a -m 'Merge products'
          git push origin gh-pages
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open
      - name: notify
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}
        with:
          script: |
              const { PR_NUMBER } = process.env
              await github.issues.createComment({
                issue_number: PR_NUMBER,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Deployed at https://kachick.github.io/mobu-elm/pr-${PR_NUMBER}/`
              })
